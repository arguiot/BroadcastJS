{"version":3,"sources":["broadcast.ts"],"names":[],"mappings":"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","file":"broadcast.js","sourceRoot":"..","sourcesContent":["class BroadcastJSNotification {\n\tname: string;\n\tobject: unknown;\n\n\tconstructor(name: string, object = null) {\n\t\tthis.name = name\n\t\tthis.object = object\n\t}\n}\nclass NotificationManager {\n\tobservers: Map<string, (object: unknown) => void>\n\tconstructor() {\n\t\tthis.observers = new Map()\n\t}\n\tget default() {\n\t\tif (typeof globalThis.BroadcastJS_Shared_Instance == \"undefined\") {\n\t\t\tglobalThis.BroadcastJS_Shared_Instance = new NotificationManager()\n\t\t}\n\t\treturn globalThis.BroadcastJS_Shared_Instance\n\t}\n\taddObserver(name: string, callback: (object: unknown) => void, reference = null) {\n\t\tthis.observers.set(`${name}, ${reference}`, callback)\n\t}\n\tremoveObserver(name: string, reference = null) {\n\t\tthis.observers.delete(`${name}, ${reference}`)\n\t}\n\tpost(notification: BroadcastJSNotification) {\n\t\tconst name = notification.name\n\t\tfor (const n of this.observers.keys()) {\n\t\t\tif (n.split(\",\")[0] == name) {\n\t\t\t\tthis.observers.get(n)(notification.object)\n\t\t\t}\n\t\t}\n\t}\n}\n\nexport { BroadcastJSNotification as Notification }\nexport const NotificationCenter = new NotificationManager()"]}